#!/usr/bin/env zsh
# Copyright (c) 2011 Tristan Le Guern <tristan.le-guern@epitech.eu>
#
# Permission to use, copy, modify, and distribute this software for any
# purpose with or without fee is hereby granted, provided that the above
# copyright notice and this permission notice appear in all copies.
#
# THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES
# WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF
# MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR
# ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
# WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
# ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
# OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.

set -e
#set -x
emulate -L zsh
setopt no_sh_word_split null_glob no_ksh_arrays
zmodload zsh/net/tcp

if [[ `which md5` == "md5 not found" ]];then
       	system=linux
else
	system=bsd
fi

typeset -A gl_option
gl_option[login]=""
gl_option[pass]=""
gl_option[log]="/tmp/zsoul.log"
gl_option[host]="ns-server.epita.fr"
gl_option[port]="4242"
gl_option[data]="ZSHAIL"
gl_option[location]="Dans ton anus"
gl_option[conf]=""
gl_option[debug]="0"

function zs_option_env {
	if [[ $gl_option[debug] -eq 1 ]] print \# $0
	if [[ "$LOGNAME" != "" ]] gl_option[login]=$LOGNAME
	if [[ "$USERNAME" != "" ]] gl_option[login]=$USERNAME
	if [[ "$SOCKS_USERNAME" != "" ]] gl_option[login]=$SOCKS_USERNAME
	if [[ "$SOCKS_PASSWORD" != "" ]] gl_option[pass]=$SOCKS_PASSWORD
	if [[ "$ZSOUL_CONF" != "" ]] gl_option[conf]=$ZSOUL_CONF
}

function zs_option_conf {
	if [[ $gl_option[debug] -eq 1 ]] print \# $0
	if [[ -r "$gl_option[conf]" ]] source $gl_option[conf]
}

function zs_option_cli {
	if [[ $gl_option[debug] -eq 1 ]] print \# $0

	zparseopts h=o_help d=o_debug
	
	if [[ $? != 0 || "$o_help" != "" ]]; then
		echo Usage: $(basename "$0") "[-dh] [file]"
		exit 64 #EX_USAGE
	fi

	if [[ "$o_debug" != "" ]]; then
		gl_option[debug]=1
		OPTIND=$(( $OPTIND + 1 ))
	fi

	gl_option[conf]=$@[$OPTIND]
}

function zs_print_log {
	if [[ $gl_option[debug] -eq 1 ]] print \# $0 $1
	print $1 >> $logfile
}

function zs_connect {
	if [[ $gl_option[debug] -eq 1 ]] print \# $0
	#XXX: Error handling
	ztcp $gl_option[host] $gl_option[port]
	fd=$REPLY
	read -r ns_reply <&$fd
	# ns_ret is an array with usefull values for authentification
	ns_ret=( $(echo $ns_reply | cut -d ' ' -f 3,4,5) )
}

function zs_init_auth {
	if [[ $gl_option[debug] -eq 1 ]] print \# $0
	#XXX: Error handling	
	print auth_ag ext_user none none >&$fd
	read -r ns_reply <&$fd
}

function zs_hash_bsd {
	echo `md5 -s "${ns_ret[1]}-${ns_ret[2]}/${ns_ret[3]}$gl_option[pass]" | cut -d ' ' -f 4`
}

function zs_hash_linux {
	echo -n "${ns_ret[1]}-${ns_ret[2]}/${ns_ret[3]}$gl_option[pass]" | md5sum | cut -d ' ' -f 1
}

function zs_auth {
	if [[ $gl_option[debug] -eq 1 ]] print \# $0
	zs_init_auth	; if [[ $gl_option[debug] -eq 1 ]] print -r - \# $ns_reply

	local hash="$(zs_hash_$system)"
	print \# HASH="${ns_ret[1]}-${ns_ret[2]}/${ns_ret[3]}$gl_option[pass]" 
	print \# ext_user_log $gl_option[login] $hash "toto" "cul"
	print ext_user_log $gl_option[login] $hash "toto" "cul" >&$fd
	read -r ns_reply <&$fd
}

function zs_status {
	if [[ $gl_option[debug] -eq 1 ]] print \# $0
	local zs_status
	case $1 in
		(actif | away | connection | idle | lock | server) zs_status=$1;;
		(*) zs_status="none";;
	esac

	print user_cmd state $zs_status >&$fd
}

function zs_loop {
	if [[ $gl_option[debug] -eq 1 ]] print \# $0
	while true; do
		read -r ns_reply <&$fd
		if [[ "$ns_reply[1]" == "ping" ]];then
			print $ns_reply[1] ns_reply[2] >&$fd
		fi
	done
}

zs_option_env
zs_option_cli $@
zs_option_conf
#TODO: Ask for password if unset here
zs_connect 	&& if [[ $gl_option[debug] -eq 1 ]] print -r - \# $ns_reply
zs_auth		&& if [[ $gl_option[debug] -eq 1 ]] print -r - \# $ns_reply
zs_status "actif"
zs_loop

ztcp -c $fd
